/**
 * 2014 Urs Zeidler
 */
package de.urszeidler.eclipse.shr5Management.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Locale;
import org.eclipse.core.runtime.Status;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.command.CommandParameter;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.emf.edit.provider.ItemProviderAdapter;
import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.jface.util.IPropertyChangeListener;
import org.eclipse.jface.util.PropertyChangeEvent;
import de.urszeidler.eclipse.shr5.Identifiable;
import de.urszeidler.eclipse.shr5.Localization;
import de.urszeidler.eclipse.shr5.Shr5Package;
import de.urszeidler.eclipse.shr5.ShrList;
import de.urszeidler.eclipse.shr5.provider.Shr5EditPlugin;
import de.urszeidler.eclipse.shr5.util.AdapterItemProviderDelegator;
import de.urszeidler.eclipse.shr5.util.Shr5Switch;
import de.urszeidler.eclipse.shr5Management.Shr5managementFactory;
import de.urszeidler.eclipse.shr5Management.Shr5managementPackage;
import de.urszeidler.eclipse.shr5Management.util.Shr5managementAdapterFactory;
import de.urszeidler.shr5.model.edit.preferences.PreferenceConstants;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Shr5managementItemProviderAdapterFactory extends Shr5managementAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
     * This keeps track of the root adapter factory that delegates to this adapter factory.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

    private String iso3Country;

    private boolean doLocalize;

	/**
     * This constructs an instance.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated not
     */
	public Shr5managementItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
        
        try {
            configureFactory();
            IPreferenceStore store = Shr5EditPlugin.getPlugin().getPreferenceStore();// .getEclipsePreferences().get("localization", "de1");
            store.addPropertyChangeListener(new IPropertyChangeListener() {

                @Override
                public void propertyChange(PropertyChangeEvent event) {
                    configureFactory();
                }
            });

        } catch (Exception e) {
            Shr5ManagementEditPlugin.getPlugin().getLog().log(new Status(Status.ERROR,Shr5ManagementEditPlugin.getPlugin().getSymbolicName(), "Error initialising Shr5managementItemProviderAdapterFactory", e));
        }

    }

    /**
     * Configures the factory by the preferences.
     */
    private void configureFactory() {
            IPreferenceStore store = Shr5EditPlugin.getPlugin().getPreferenceStore();// .getEclipsePreferences().get("localization", "de1");

            if (store.getBoolean(PreferenceConstants.AUTOMATIC_CHOOSEN_LOCALISATION)) {
                Locale default1 = Locale.getDefault();
                iso3Country = default1.getLanguage();// default1.getISO3Country();
                if (iso3Country.equals("de"))
                    doLocalize = true;

            } else {
                iso3Country = store.getString(PreferenceConstants.CHOOSEN_LOCALISATION);
            }

            doLocalize = store.getBoolean(PreferenceConstants.RESOURCE_LOCALIZAION_ENABLED);
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.NonPlayerCharacter} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected NonPlayerCharacterItemProvider nonPlayerCharacterItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.NonPlayerCharacter}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createNonPlayerCharacterAdapter() {
        if (nonPlayerCharacterItemProvider == null) {
            nonPlayerCharacterItemProvider = new NonPlayerCharacterItemProvider(this);
        }

        return nonPlayerCharacterItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.KarmaGaint} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected KarmaGaintItemProvider karmaGaintItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.KarmaGaint}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createKarmaGaintAdapter() {
        if (karmaGaintItemProvider == null) {
            karmaGaintItemProvider = new KarmaGaintItemProvider(this);
        }

        return karmaGaintItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.FreeStyle} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected FreeStyleItemProvider freeStyleItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.FreeStyle}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createFreeStyleAdapter() {
        if (freeStyleItemProvider == null) {
            freeStyleItemProvider = new FreeStyleItemProvider(this);
        }

        return freeStyleItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Shr5System} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected Shr5SystemItemProvider shr5SystemItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Shr5System}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createShr5SystemAdapter() {
        if (shr5SystemItemProvider == null) {
            shr5SystemItemProvider = new Shr5SystemItemProvider(this);
        }

        return shr5SystemItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.MetaType} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected MetaTypeItemProvider metaTypeItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.MetaType}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createMetaTypeAdapter() {
        if (metaTypeItemProvider == null) {
            metaTypeItemProvider = new MetaTypeItemProvider(this);
        }

        return metaTypeItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Attributes} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected AttributesItemProvider attributesItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Attributes}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createAttributesAdapter() {
        if (attributesItemProvider == null) {
            attributesItemProvider = new AttributesItemProvider(this);
        }

        return attributesItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Skill} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected SkillItemProvider skillItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Skill}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createSkillAdapter() {
        if (skillItemProvider == null) {
            skillItemProvider = new SkillItemProvider(this);
        }

        return skillItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Resourcen} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected ResourcenItemProvider resourcenItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Resourcen}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createResourcenAdapter() {
        if (resourcenItemProvider == null) {
            resourcenItemProvider = new ResourcenItemProvider(this);
        }

        return resourcenItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Technomancer} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected TechnomancerItemProvider technomancerItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Technomancer}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createTechnomancerAdapter() {
        if (technomancerItemProvider == null) {
            technomancerItemProvider = new TechnomancerItemProvider(this);
        }

        return technomancerItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Spellcaster} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected SpellcasterItemProvider spellcasterItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Spellcaster}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createSpellcasterAdapter() {
        if (spellcasterItemProvider == null) {
            spellcasterItemProvider = new SpellcasterItemProvider(this);
        }

        return spellcasterItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Adept} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected AdeptItemProvider adeptItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Adept}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createAdeptAdapter() {
        if (adeptItemProvider == null) {
            adeptItemProvider = new AdeptItemProvider(this);
        }

        return adeptItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.FreeStyleGenerator} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected FreeStyleGeneratorItemProvider freeStyleGeneratorItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.FreeStyleGenerator}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createFreeStyleGeneratorAdapter() {
        if (freeStyleGeneratorItemProvider == null) {
            freeStyleGeneratorItemProvider = new FreeStyleGeneratorItemProvider(this);
        }

        return freeStyleGeneratorItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Shr5Generator} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected Shr5GeneratorItemProvider shr5GeneratorItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Shr5Generator}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createShr5GeneratorAdapter() {
        if (shr5GeneratorItemProvider == null) {
            shr5GeneratorItemProvider = new Shr5GeneratorItemProvider(this);
        }

        return shr5GeneratorItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.AttributeChange} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected AttributeChangeItemProvider attributeChangeItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.AttributeChange}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createAttributeChangeAdapter() {
        if (attributeChangeItemProvider == null) {
            attributeChangeItemProvider = new AttributeChangeItemProvider(this);
        }

        return attributeChangeItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.PlayerCharacter} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected PlayerCharacterItemProvider playerCharacterItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.PlayerCharacter}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createPlayerCharacterAdapter() {
        if (playerCharacterItemProvider == null) {
            playerCharacterItemProvider = new PlayerCharacterItemProvider(this);
        }

        return playerCharacterItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Mudan} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected MudanItemProvider mudanItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Mudan}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createMudanAdapter() {
        if (mudanItemProvider == null) {
            mudanItemProvider = new MudanItemProvider(this);
        }

        return mudanItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.CharacterGroup} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected CharacterGroupItemProvider characterGroupItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.CharacterGroup}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createCharacterGroupAdapter() {
        if (characterGroupItemProvider == null) {
            characterGroupItemProvider = new CharacterGroupItemProvider(this);
        }

        return characterGroupItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Connection} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected ConnectionItemProvider connectionItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Connection}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createConnectionAdapter() {
        if (connectionItemProvider == null) {
            connectionItemProvider = new ConnectionItemProvider(this);
        }

        return connectionItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.PersonaChange} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PersonaChangeItemProvider personaChangeItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.PersonaChange}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPersonaChangeAdapter() {
        if (personaChangeItemProvider == null) {
            personaChangeItemProvider = new PersonaChangeItemProvider(this);
        }

        return personaChangeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link java.util.Map.Entry} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected GeneratorStateToEStringMapEntryItemProvider generatorStateToEStringMapEntryItemProvider;

	/**
     * This creates an adapter for a {@link java.util.Map.Entry}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createGeneratorStateToEStringMapEntryAdapter() {
        if (generatorStateToEStringMapEntryItemProvider == null) {
            generatorStateToEStringMapEntryItemProvider = new GeneratorStateToEStringMapEntryItemProvider(this);
        }

        return generatorStateToEStringMapEntryItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.IncreaseCharacterPart} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected IncreaseCharacterPartItemProvider increaseCharacterPartItemProvider;

	/**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.IncreaseCharacterPart}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createIncreaseCharacterPartAdapter() {
        if (increaseCharacterPartItemProvider == null) {
            increaseCharacterPartItemProvider = new IncreaseCharacterPartItemProvider(this);
        }

        return increaseCharacterPartItemProvider;
    }

	/**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.LifestyleToStartMoney} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LifestyleToStartMoneyItemProvider lifestyleToStartMoneyItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.LifestyleToStartMoney}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLifestyleToStartMoneyAdapter() {
        if (lifestyleToStartMoneyItemProvider == null) {
            lifestyleToStartMoneyItemProvider = new LifestyleToStartMoneyItemProvider(this);
        }

        return lifestyleToStartMoneyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.GruntGroup} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GruntGroupItemProvider gruntGroupItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.GruntGroup}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGruntGroupAdapter() {
        if (gruntGroupItemProvider == null) {
            gruntGroupItemProvider = new GruntGroupItemProvider(this);
        }

        return gruntGroupItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.GruntMembers} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GruntMembersItemProvider gruntMembersItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.GruntMembers}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGruntMembersAdapter() {
        if (gruntMembersItemProvider == null) {
            gruntMembersItemProvider = new GruntMembersItemProvider(this);
        }

        return gruntMembersItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.PlayerManagement} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PlayerManagementItemProvider playerManagementItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.PlayerManagement}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPlayerManagementAdapter() {
        if (playerManagementItemProvider == null) {
            playerManagementItemProvider = new PlayerManagementItemProvider(this);
        }

        return playerManagementItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.GamemasterManagement} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GamemasterManagementItemProvider gamemasterManagementItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.GamemasterManagement}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGamemasterManagementAdapter() {
        if (gamemasterManagementItemProvider == null) {
            gamemasterManagementItemProvider = new GamemasterManagementItemProvider(this);
        }

        return gamemasterManagementItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.CharacterAdvancementSystem} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CharacterAdvancementSystemItemProvider characterAdvancementSystemItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.CharacterAdvancementSystem}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCharacterAdvancementSystemAdapter() {
        if (characterAdvancementSystemItemProvider == null) {
            characterAdvancementSystemItemProvider = new CharacterAdvancementSystemItemProvider(this);
        }

        return characterAdvancementSystemItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Shr5KarmaGenerator} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Shr5KarmaGeneratorItemProvider shr5KarmaGeneratorItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Shr5KarmaGenerator}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createShr5KarmaGeneratorAdapter() {
        if (shr5KarmaGeneratorItemProvider == null) {
            shr5KarmaGeneratorItemProvider = new Shr5KarmaGeneratorItemProvider(this);
        }

        return shr5KarmaGeneratorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.QuellenConstrain} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected QuellenConstrainItemProvider quellenConstrainItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.QuellenConstrain}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createQuellenConstrainAdapter() {
        if (quellenConstrainItemProvider == null) {
            quellenConstrainItemProvider = new QuellenConstrainItemProvider(this);
        }

        return quellenConstrainItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.Pack} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PackItemProvider packItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.Pack}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPackAdapter() {
        if (packItemProvider == null) {
            packItemProvider = new PackItemProvider(this);
        }

        return packItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.CharacterDiary} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CharacterDiaryItemProvider characterDiaryItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.CharacterDiary}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCharacterDiaryAdapter() {
        if (characterDiaryItemProvider == null) {
            characterDiaryItemProvider = new CharacterDiaryItemProvider(this);
        }

        return characterDiaryItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.DiaryEntry} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DiaryEntryItemProvider diaryEntryItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.DiaryEntry}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDiaryEntryAdapter() {
        if (diaryEntryItemProvider == null) {
            diaryEntryItemProvider = new DiaryEntryItemProvider(this);
        }

        return diaryEntryItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.ContractPayment} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ContractPaymentItemProvider contractPaymentItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.ContractPayment}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createContractPaymentAdapter() {
        if (contractPaymentItemProvider == null) {
            contractPaymentItemProvider = new ContractPaymentItemProvider(this);
        }

        return contractPaymentItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.urszeidler.eclipse.shr5Management.CharacterChange} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CharacterChangeItemProvider characterChangeItemProvider;

    /**
     * This creates an adapter for a {@link de.urszeidler.eclipse.shr5Management.CharacterChange}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCharacterChangeAdapter() {
        if (characterChangeItemProvider == null) {
            characterChangeItemProvider = new CharacterChangeItemProvider(this);
        }

        return characterChangeItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

	/**
     * This sets the composed adapter factory that contains this factory.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

	/**
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

	/**
     * This implementation substitutes the factory itself as the key for the adapter.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

	/**
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

	/**
     * This adds a listener.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

	/**
     * This removes a listener.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

	/**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

	/**
     * This disposes all of the item providers created by this factory. 
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	public void dispose() {
        if (nonPlayerCharacterItemProvider != null) nonPlayerCharacterItemProvider.dispose();
        if (karmaGaintItemProvider != null) karmaGaintItemProvider.dispose();
        if (freeStyleItemProvider != null) freeStyleItemProvider.dispose();
        if (shr5SystemItemProvider != null) shr5SystemItemProvider.dispose();
        if (metaTypeItemProvider != null) metaTypeItemProvider.dispose();
        if (attributesItemProvider != null) attributesItemProvider.dispose();
        if (skillItemProvider != null) skillItemProvider.dispose();
        if (resourcenItemProvider != null) resourcenItemProvider.dispose();
        if (technomancerItemProvider != null) technomancerItemProvider.dispose();
        if (spellcasterItemProvider != null) spellcasterItemProvider.dispose();
        if (adeptItemProvider != null) adeptItemProvider.dispose();
        if (freeStyleGeneratorItemProvider != null) freeStyleGeneratorItemProvider.dispose();
        if (shr5GeneratorItemProvider != null) shr5GeneratorItemProvider.dispose();
        if (attributeChangeItemProvider != null) attributeChangeItemProvider.dispose();
        if (playerCharacterItemProvider != null) playerCharacterItemProvider.dispose();
        if (mudanItemProvider != null) mudanItemProvider.dispose();
        if (characterGroupItemProvider != null) characterGroupItemProvider.dispose();
        if (connectionItemProvider != null) connectionItemProvider.dispose();
        if (personaChangeItemProvider != null) personaChangeItemProvider.dispose();
        if (generatorStateToEStringMapEntryItemProvider != null) generatorStateToEStringMapEntryItemProvider.dispose();
        if (increaseCharacterPartItemProvider != null) increaseCharacterPartItemProvider.dispose();
        if (lifestyleToStartMoneyItemProvider != null) lifestyleToStartMoneyItemProvider.dispose();
        if (gruntGroupItemProvider != null) gruntGroupItemProvider.dispose();
        if (gruntMembersItemProvider != null) gruntMembersItemProvider.dispose();
        if (playerManagementItemProvider != null) playerManagementItemProvider.dispose();
        if (gamemasterManagementItemProvider != null) gamemasterManagementItemProvider.dispose();
        if (characterAdvancementSystemItemProvider != null) characterAdvancementSystemItemProvider.dispose();
        if (shr5KarmaGeneratorItemProvider != null) shr5KarmaGeneratorItemProvider.dispose();
        if (quellenConstrainItemProvider != null) quellenConstrainItemProvider.dispose();
        if (packItemProvider != null) packItemProvider.dispose();
        if (characterDiaryItemProvider != null) characterDiaryItemProvider.dispose();
        if (diaryEntryItemProvider != null) diaryEntryItemProvider.dispose();
        if (contractPaymentItemProvider != null) contractPaymentItemProvider.dispose();
        if (characterChangeItemProvider != null) characterChangeItemProvider.dispose();
    }

	/**
     * A child creation extender for the {@link Shr5Package}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	public static class Shr5ChildCreationExtender implements IChildCreationExtender {
		/**
         * The switch for creating child descriptors specific to each extended class.
         * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
         * @generated
         */
		protected static class CreationSwitch extends Shr5Switch<Object> {
			/**
             * The child descriptors being populated.
             * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
             * @generated
             */
			protected List<Object> newChildDescriptors;

			/**
             * The domain in which to create the children.
             * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
             * @generated
             */
			protected EditingDomain editingDomain;

			/**
             * Creates the a switch for populating child descriptors in the given domain.
             * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
             * @generated
             */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
                this.newChildDescriptors = newChildDescriptors;
                this.editingDomain = editingDomain;
            }
			/**
             * <!-- begin-user-doc -->
             * <!-- end-user-doc -->
             * @generated
             */
            @Override
            public Object caseShrList(ShrList object) {
                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createNonPlayerCharacter()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createKarmaGaint()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createFreeStyle()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createShr5System()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createMetaType()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createAttributes()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createSkill()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createResourcen()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createTechnomancer()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createAdept()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createSpellcaster()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createFreeStyleGenerator()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createShr5Generator()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createAttributeChange()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createPlayerCharacter()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createMudan()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createCharacterGroup()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createConnection()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createPersonaChange()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.create(Shr5managementPackage.Literals.GENERATOR_STATE_TO_ESTRING_MAP_ENTRY)));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createIncreaseCharacterPart()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createLifestyleToStartMoney()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createGruntGroup()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createGruntMembers()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createPlayerManagement()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createGamemasterManagement()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createCharacterAdvancementSystem()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createShr5KarmaGenerator()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createQuellenConstrain()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createPack()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createCharacterDiary()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createDiaryEntry()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createContractPayment()));

                newChildDescriptors.add
                    (createChildParameter
                        (Shr5Package.Literals.SHR_LIST__ENTRIES,
                         Shr5managementFactory.eINSTANCE.createCharacterChange()));

                return null;
            }
            /**
             * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
             * @generated
             */
			protected CommandParameter createChildParameter(Object feature, Object child) {
                return new CommandParameter(null, feature, child);
            }

		}

		/**
         * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
         * @generated
         */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
            ArrayList<Object> result = new ArrayList<Object>();
            new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
            return result;
        }

		/**
         * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
         * @generated
         */
		public ResourceLocator getResourceLocator() {
            return Shr5ManagementEditPlugin.INSTANCE;
        }
	}

	   @Override
	    public Adapter createAdapter(Notifier target) {

	        Adapter doSwitch = modelSwitch.doSwitch((EObject)target);
	        if (doLocalize)
	            if (target instanceof Identifiable) {
	                return new AdapterItemProviderDelegator((ItemProviderAdapter)doSwitch) {
	                    @Override
	                    public String getText(Object object) {
	                        if (object instanceof Identifiable) {
	                            Identifiable id = (Identifiable)object;

	                            EObject eObject = (EObject)object;
	                            EClass eClass = eObject.eClass();
	                            // EStructuralFeature feature = getLabelFeature(eClass);

	                            String className = getEClassName(eClass);
	                            EList<Localization> localizations = id.getLocalizations();
	                            for (Localization localization : localizations) {
	                                if (iso3Country.equals(localization.getLocal())) {
	                                    return className + " " + localization.getName();
	                                }
	                            }
	                        }
	                        return super.getText(object);
	                    }
	                };
	            }
	        return doSwitch;

	    }

	   public static String getEClassName(EClass object) {
	        EClass ec = (EClass)object;
	        String key = "_UI_" + ec.getName() + "_type";
	        try {
	            return Shr5ManagementEditPlugin.INSTANCE.getString(key);
	        } catch (Exception e) {
	            return ec.getName();
	        }
	        
	    }

}
