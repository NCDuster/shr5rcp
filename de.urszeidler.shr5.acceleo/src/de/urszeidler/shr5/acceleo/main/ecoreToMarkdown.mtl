[comment encoding = UTF-8 /]
[module ecoreToMarkdown('http://www.eclipse.org/emf/2002/Ecore')]


[**
 * Prints all concret subclasses.
*/]
[template public printAllSubClassesAndTitel(anEPackage : EPackage, name : String)]
## all [name/]

[printAllSubClasses(anEPackage, name)/]

[/template]

[**
 * Prints all concret subclasses.
*/]
[template public printAllEClasses(anEPackage : EPackage)]
[allEclassesAsLink(anEPackage)/]

[for (it : EClass | anEPackage.eClassifiers->selectByType(EClass)
)]
[printEClass(it.oclAsType(EClass))/][/for][/template]

[**
 * Prints all concret subclasses.
*/]
[template public printAllSubClasses(anEPackage : EPackage, name : String)]
[for (it : EClass | anEPackage.eClassifiers
		->selectByType(EClass) )]
[if ( not it.abstract and not it.eAllSuperTypes
			->select(c:EClass  | c.name=name )->isEmpty() )]
* [printEClassLink(it.oclAsType(EClass))/]
[/if][/for][/template]

[**
 * Print the eclass link.
*/]
[template public printEClassLink(anEclass : EClass)]
[ '[' /][anEclass.name/][ ']' /]([anEclass.ePackage.name.toLower()/]-model#[anEclass.name.toLower()/])[/template]


[**
 * Creates doc from the eannotations.
 * 
*/]
[template public toDocumentationInTable(ann : Collection(EAnnotation))]
[for (ea : EAnnotation | ann)]
[for (it : EStringToStringMapEntry | ea.details)]
[if (it.key='documentation')][it.value.substituteAll('\n', ' ').substituteAll('\r', ' ').trim() /][/if][/for][/for][/template]

[**
 * Creates doc from the eannotations.
 * 
*/]
[template public toDocumentation(ann : Collection(EAnnotation))]
[for (ea : EAnnotation | ann)]
[for (it : EStringToStringMapEntry | ea.details)]
[if (it.key='documentation')][it.value.trim()/][/if][/for][/for][/template]

[template public allEclassesAsLink(pack : EPackage)]
[for (it : EClass | pack.eClassifiers->selectByType(EClass) )]
|[printEClassLink(it)/][/for]| 

[/template]


[**
 * Print the eclass.
*/]
[template public printEClass(anEclass : EClass)]

## [anEclass.name/]

[toDocumentation(anEclass.eAnnotations)/]

[if (not anEclass.eAllSuperTypes->isEmpty())]
**all super types :**
[for (it : EClass | anEclass.eAllSuperTypes)]
|[printEClassLink(it)/][/for]| 

[/if]
[if (not anEclass.eAllAttributes->isEmpty())]
**attributes**

name | type | cardinality | changeable | doc
----|----|---|---|---
[for (it : EAttribute | anEclass.eAllAttributes)]
[it.name/]|[it.eType.name /]|[cardinality(it)/]|[it.changeable/]|[ toDocumentationInTable(it.eAnnotations)/]
[/for][/if]	

[if (not anEclass.eAllReferences->isEmpty())]
**references**

name | type | containment | cardinality | changeable | doc
----|---|---|---|---|---
[for (it : EReference | anEclass.eAllReferences)]
[it.name/]|[printEClassLink(it.eReferenceType)/]|[it.containment/]|[cardinality(it)/]|[it.changeable/]|[ toDocumentationInTable(it.eAnnotations)/]
[/for][/if]


[if (not anEclass.eAllOperations->isEmpty())]
**methods**

name | doc
----|---|---|---|---|---
[for (it : EOperation | anEclass.eAllOperations)]
[it.name/]|[ toDocumentationInTable(it.eAnnotations)/]
[/for][/if]

[linkToTop(eClass().ePackage)/]

[/template]


[template public linkToTop(anEPackage : EPackage)]
[ '[' /]_back to top_[ ']' /](([anEPackage.name.toLower()/]-model#concret-classes-in-the-model-[anEPackage.name/]))
[/template]

[template public cardinality(feature : EStructuralFeature)]
[feature.lowerBound/]-[if (feature.upperBound=-1)]*[else][feature.upperBound/][/if][/template]
